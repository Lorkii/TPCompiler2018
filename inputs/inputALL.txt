/*
    Currently testing (as you are reading):
        -   Comments
    Currently tested:
        -   Functions with parameters 
        -   Functions without parameters
        -   Function call with wrong number of parameters   
        -   Unexisting function call
        -   Printing integer
        -   Printing string
        -   Printing variable
        -   Boolean assignation
        -   Boolean testing
        -   Comparison operators
        -   While with variables
		-	Line comments
		-	Multiline comment
        -   Function returning value
*/

fun functionWithSeveralParameters(param1, param2, param3)
{
    print(param1);
    print(param2);
    print(param3);
    
    return 0;
}

fun functionWithoutParameters()
{
    print("We have no parameters");
    return 0;
}

fun checkIfNumbersAreEquals(num1, num2)
{
    test = (num1 == num2);
    
    if(test)
    {
        print("They are equal!");
    }

    if(test == False)
    {
        print("They are not equal...");
    }

    return 0;
}

fun printGlobalVariable()
{
    print(myGlobalVar);
    
    return 0;
}

fun returnTen()
{
    return 10;
}

fun prettyTesting(message)
{
    print("--------------------------");
    print(message);

    return 0;
}

prettyTesting("Starting Tests:");

prettyTesting("Calling function with multiple parameters :");
functionWithSeveralParameters("We " + "have ", 1*3, "parameters!"); 

prettyTesting("Calling a function without any parameter :");
functionWithoutParameters();

//Here we test the error when the parameters number doesn't corresponds
prettyTesting("Trying to call function giving wrong parameters EXPECTING ERROR");
functionWithoutParameters(12);

//Here we test the call to unexisting function
prettyTesting("Trying to call undefined function EXPECTING ERROR");
UnexistingFunction();


// Testing to access a global variable from a function and a local one with the same name

global myGlobalVar = "This is a global variable !";
myGlobalVar = "This is a local with the same name as a global";

prettyTesting("Testing to access a local variable with the same name as a local one");
print(myGlobalVar);

prettyTesting("Now accessing a global variable from a function");
printGlobalVariable();

prettyTesting("Testing function with return value :");
print(returnTen());

staticNum = 3;
descendingNum = 10;

while(staticNum <= descendingNum)
{
    prettyTesting("Checking in the while loop");
    checkIfNumbersAreEquals(staticNum, descendingNum);
    descendingNum = descendingNum-1;
}
